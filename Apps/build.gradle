plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id("androidx.navigation.safeargs")
}

android {
    namespace 'com.android'
    compileSdk 33

    defaultConfig {
        applicationId "com.android"
        minSdk 23
        targetSdk 33
        versionCode 1
        versionName "1.0"

        def contentProviderAuthority = applicationId + ".stickercontentprovider"
        manifestPlaceholders = [contentProviderAuthority: contentProviderAuthority]
        buildConfigField("String", "CONTENT_PROVIDER_AUTHORITY", "\"${contentProviderAuthority}\"")

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
    }

    buildFeatures {
        viewBinding = true
    }

    packagingOptions {
        exclude 'lib/*/libnative-imagetranscoder.so'
        exclude 'lib/*/libnative-filters.so'
    }
}

task checkDebug {
    doLast {
        println("checkDebug")
        if (android.defaultConfig.applicationId.startsWith("com.whatsapp")) {
            throw new GradleException("applicationId in defaultConfig cannot start with com.whatsapp, please change your applicationId in app/build.gradle")
        }
        checkApplicationIdInDebug()
    }
}

private void checkApplicationIdInDebug() {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    def ignoreApplicationIdCheck = properties.getProperty('ignoreApplicationIdCheck')
    if (ignoreApplicationIdCheck == null) {
//        if (android.defaultConfig.applicationId == "com.example.samplestickerapp") {
//            throw new GradleException("Your applicationId is currently com.example.samplestickerapp, please change your applicationId to a different string in app/build.gradle in line 10")
//        }
    } else {
        println("application id check ignored")
    }
}

task checkRelease {
    doLast {
        println("checkRelease")
        if (android.defaultConfig.applicationId.startsWith("com.example")) {
            throw new GradleException("applicationId in defaultConfig cannot start with com.example, please change your applicationId in app/build.gradle")
        }
    }
}

tasks.whenTaskAdded { task ->
    println(task.name)
    if (task.name.contains("assembleDebug")) {
        task.dependsOn checkDebug
    }
    if (task.name.contains("assembleRelease")) {
        task.dependsOn checkRelease
    }
}


dependencies {
    //ok http
    implementation("com.squareup.okhttp3:okhttp:4.11.0")

    // lottie animation images
    implementation 'com.airbnb.android:lottie:6.0.0'

    // recording screen
    implementation 'com.github.HBiSoft:HBRecorder:3.0.1'

    // load images
    implementation 'com.github.bumptech.glide:glide:4.15.1'

    //Room database
    implementation("androidx.room:room-runtime:2.5.1")
    implementation "androidx.room:room-ktx:2.5.1"
    kapt("androidx.room:room-compiler:2.5.1")

    //gson
    implementation 'com.google.code.gson:gson:2.10.1'

    implementation 'androidx.core:core-ktx:1.10.1'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.9.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    //navigation component
    implementation("androidx.navigation:navigation-fragment-ktx:2.5.3")
    implementation("androidx.navigation:navigation-ui-ktx:2.5.3")

    implementation 'androidx.camera:camera-core:1.3.0-alpha06'
    // CameraX core library using camera2 implementation
    implementation 'androidx.camera:camera-camera2:1.3.0-alpha06'
    // CameraX Lifecycle Library
    implementation 'androidx.camera:camera-lifecycle:1.3.0-alpha06'
    // CameraX View class
    implementation 'androidx.camera:camera-view:1.3.0-alpha06'

    // pick color
    implementation 'com.github.Dhaval2404:ColorPicker:2.3'

    // whatsapp
    implementation "com.facebook.fresco:fresco:2.5.0"
    implementation "com.facebook.fresco:webpsupport:2.5.0"
    implementation "com.facebook.fresco:animated-webp:2.5.0"
    implementation "com.facebook.fresco:animated-base:2.5.0"
}