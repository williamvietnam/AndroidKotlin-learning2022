// Generated by view binder compiler. Do not edit!
package com.android.life_cycles.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.android.life_cycles.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button buttonHieu;

  @NonNull
  public final ImageView buttonMinusValueX;

  @NonNull
  public final ImageView buttonMinusValueY;

  @NonNull
  public final ImageView buttonPlusValueX;

  @NonNull
  public final ImageView buttonPlusValueY;

  @NonNull
  public final Button buttonThuong;

  @NonNull
  public final Button buttonTich;

  @NonNull
  public final Button buttonTong;

  @NonNull
  public final EditText edtInputX;

  @NonNull
  public final EditText edtInputY;

  @NonNull
  public final TextView tvValueX;

  @NonNull
  public final TextView tvValueY;

  @NonNull
  public final View view;

  private FragmentMainBinding(@NonNull ConstraintLayout rootView, @NonNull Button buttonHieu,
      @NonNull ImageView buttonMinusValueX, @NonNull ImageView buttonMinusValueY,
      @NonNull ImageView buttonPlusValueX, @NonNull ImageView buttonPlusValueY,
      @NonNull Button buttonThuong, @NonNull Button buttonTich, @NonNull Button buttonTong,
      @NonNull EditText edtInputX, @NonNull EditText edtInputY, @NonNull TextView tvValueX,
      @NonNull TextView tvValueY, @NonNull View view) {
    this.rootView = rootView;
    this.buttonHieu = buttonHieu;
    this.buttonMinusValueX = buttonMinusValueX;
    this.buttonMinusValueY = buttonMinusValueY;
    this.buttonPlusValueX = buttonPlusValueX;
    this.buttonPlusValueY = buttonPlusValueY;
    this.buttonThuong = buttonThuong;
    this.buttonTich = buttonTich;
    this.buttonTong = buttonTong;
    this.edtInputX = edtInputX;
    this.edtInputY = edtInputY;
    this.tvValueX = tvValueX;
    this.tvValueY = tvValueY;
    this.view = view;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonHieu;
      Button buttonHieu = ViewBindings.findChildViewById(rootView, id);
      if (buttonHieu == null) {
        break missingId;
      }

      id = R.id.buttonMinusValueX;
      ImageView buttonMinusValueX = ViewBindings.findChildViewById(rootView, id);
      if (buttonMinusValueX == null) {
        break missingId;
      }

      id = R.id.buttonMinusValueY;
      ImageView buttonMinusValueY = ViewBindings.findChildViewById(rootView, id);
      if (buttonMinusValueY == null) {
        break missingId;
      }

      id = R.id.buttonPlusValueX;
      ImageView buttonPlusValueX = ViewBindings.findChildViewById(rootView, id);
      if (buttonPlusValueX == null) {
        break missingId;
      }

      id = R.id.buttonPlusValueY;
      ImageView buttonPlusValueY = ViewBindings.findChildViewById(rootView, id);
      if (buttonPlusValueY == null) {
        break missingId;
      }

      id = R.id.buttonThuong;
      Button buttonThuong = ViewBindings.findChildViewById(rootView, id);
      if (buttonThuong == null) {
        break missingId;
      }

      id = R.id.buttonTich;
      Button buttonTich = ViewBindings.findChildViewById(rootView, id);
      if (buttonTich == null) {
        break missingId;
      }

      id = R.id.buttonTong;
      Button buttonTong = ViewBindings.findChildViewById(rootView, id);
      if (buttonTong == null) {
        break missingId;
      }

      id = R.id.edtInputX;
      EditText edtInputX = ViewBindings.findChildViewById(rootView, id);
      if (edtInputX == null) {
        break missingId;
      }

      id = R.id.edtInputY;
      EditText edtInputY = ViewBindings.findChildViewById(rootView, id);
      if (edtInputY == null) {
        break missingId;
      }

      id = R.id.tvValueX;
      TextView tvValueX = ViewBindings.findChildViewById(rootView, id);
      if (tvValueX == null) {
        break missingId;
      }

      id = R.id.tvValueY;
      TextView tvValueY = ViewBindings.findChildViewById(rootView, id);
      if (tvValueY == null) {
        break missingId;
      }

      id = R.id.view;
      View view = ViewBindings.findChildViewById(rootView, id);
      if (view == null) {
        break missingId;
      }

      return new FragmentMainBinding((ConstraintLayout) rootView, buttonHieu, buttonMinusValueX,
          buttonMinusValueY, buttonPlusValueX, buttonPlusValueY, buttonThuong, buttonTich,
          buttonTong, edtInputX, edtInputY, tvValueX, tvValueY, view);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
